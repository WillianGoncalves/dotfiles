" Coc is an intellisense engine for Vim

Plug 'neoclide/coc.nvim', {'branch': 'release'}

" use <c-space> to trigger completion
inoremap <silent><expr> <c-space> coc#refresh()

" jump to next snippet
inoremap <expr> <c-j> coc#pum#visible() ? coc#pum#next(1) : "\<c-j>"

" jump to previous snippet
inoremap <expr> <c-k> coc#pum#visible() ? coc#pum#prev(1) : "\<c-k>"

" <TAB> is useful when there are one option,
" or the desired option is the first
"inoremap <expr> <TAB> pumvisible() ? "\<c-y>" : "\<TAB>"
inoremap <silent><expr> <TAB>
      \ coc#pum#visible() ? coc#pum#next(1):
      \ CheckBackspace() ? "\<Tab>" :
      \ coc#refresh()

inoremap <expr><S-TAB> coc#pum#visible() ? coc#pum#prev(1) : "\<C-h>"

inoremap <silent><expr> <CR> coc#pum#visible() ? coc#pum#confirm()
                              \: "\<C-g>u\<CR>\<c-r>=coc#on_enter()\<CR>"

function! CheckBackspace() abort
  let col = col('.') - 1
  return !col || getline('.')[col - 1]  =~# '\s'
endfunction

" jump to next placeholder on snippet
let g:coc_snippet_next = '<c-n>'

" jump to previous placeholder on snippet
let g:coc_snippet_prev = '<c-p>'

let g:coc_global_extensions = [
  \ 'coc-json',
  \ 'coc-snippets',
  \ 'coc-ultisnips',
  \ 'coc-tsserver',
  \ 'coc-diagnostic',
  \ 'coc-eslint'
  \ ]

inoremap <silent><expr> <down> coc#float#has_scroll() ? coc#pum#scroll(1) : "\<down>"
inoremap <silent><expr>  <up>  coc#float#has_scroll() ? coc#pum#scroll(0) :  "\<up>"

" Use K to show documentation in preview window.
nnoremap <silent> K :call ShowDocumentation()<CR>

function! ShowDocumentation()
  if CocAction('hasProvider', 'hover')
    call CocActionAsync('doHover')
  else
    call feedkeys('K', 'in')
  endif
endfunction

" GoTo code navigation.
nmap <silent> gD <Plug>(coc-definition)
nmap <silent> gy <Plug>(coc-type-definition)
nmap <silent> gi <Plug>(coc-implementation)
nmap <silent> gr <Plug>(coc-references)
nmap ]e <plug>(coc-diagnostic-next)
nmap [e <plug>(coc-diagnostic-prev)
nmap <leader>rf <Plug>(coc-refactor)
nmap <leader>rn <Plug>(coc-rename)
nmap <leader>ac  <Plug>(coc-codeaction)
nmap <leader>qf <Plug>(coc-fix-current)

" vim:ft=vim
